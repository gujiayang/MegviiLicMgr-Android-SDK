apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "0.2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
        project.archivesBaseName = "MGLicenseManagerSDK"
        project.version = android.defaultConfig.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

//    sourceSets.main {
////        jniLibs.srcDirs = ['src/main/libs']     //获取libs的存放位置
//        jni.srcDirs = ['src/main/jni'] //disable automatic ndk-build call
//    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

task releaseAll() {
    doLast {
        delete '../release'
        copy {
            from "build/intermediates/bundles/release/"
            into "../release/for-eclipse/libs"
            include "classes.jar"
            rename("classes.jar", "${archivesBaseName}-${version}.jar")
        }
        copy {
            from "build/outputs/aar/${archivesBaseName}-${version}.aar"
            //include "*"
            into "../release"
        }
        copy {
            from "build/intermediates/ndkBuild/release/obj/local/"
            exclude "*/objs"
            into "../release/for-eclipse/libs"
        }
    }
    dependsOn build
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
}
